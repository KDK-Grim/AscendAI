Final Instructions for GPT-Engineer:

Purpose:  
GPT-Engineer must autonomously build, complete, and refine all missing scripts, functionalities, and integrations to fully operationalize the Ascend AI system as outlined.

Tasks for GPT-Engineer:

1. Analyze Provided Files:  
   - Review the provided Python scripts, zip modules, and requirements files.
   - Extract functions, classes, and dependencies.

2. Create Missing Scripts & Modules:  
   - verify_nlp_modules.py: Ensure NLP models and components are correctly downloaded and verified.
   - auto_fix_logic.py: Implement self-correcting logic for scripts and functions.
   - dependency_manager.py: Manage auto-installation of missing Python dependencies.
   - execution_monitor.py: Continuously monitor execution and log anomalies.
   - syntax_fixer.py: Automatically detect and correct Python syntax errors.
   - pre_execution_validation.py: Validate system scripts and configurations before execution.
   - Function_Reconstruction.py: Automatically regenerate missing or corrupt function definitions.

3. Develop Financial Intelligence Scripts:  
   - Fully implement market analysis, sentiment analysis, portfolio management, quantum trading scripts, institutional influence detection, stealth trading, and dark pool analysis explicitly as outlined.

4. Quantum Computing Integration:  
   - Fully integrate Quantum AI logic into market prediction, sentiment analysis, and trade execution modules.
   - Ensure quantum scripts explicitly leverage Qiskit or PennyLane as provided.

5. Dashboard and UI:  
   - Convert and integrate Ultimate_Dashboard.txt into an operational Python UI for continuous management and real-time analytics.

6. Logging, Monitoring & Self-Healing:  
   - Explicitly ensure all logs output to specified files in Logs.
   - Fully automate and integrate watchdog systems with PowerShell scripts.

7. Networking and Security:  
   - Complete missing security logic for encrypted networking and device integration using the provided networking modules.

8. Testing and Optimization:  
   - Automate comprehensive testing for each module.
   - Implement dynamic recursive loops for optimization, self-learning, self-debugging, and error handling explicitly as defined.

9. Deployment Automation:  
   - Automate environment creation using provided ascend_environment_3.yml and requirements.txt.
   - Integrate scripts into automatic boot sequence using Powershell_Fix_Function.ps1.

10. Final Validation & Launch:  
    - Validate and launch the complete Ascend AI environment.
    - Confirm stable operation across Surface Go, iPhone, Xbox, and the dedicated Linux machine on the S: drive.