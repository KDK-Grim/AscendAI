# ascend_llama_boot.py
import os
import sys
from llama_core import LLaMAOrchestrator

# Define the full base structure
BASE_DIR = "Ascend-AI/"
PROMPT_DIR = os.path.join(BASE_DIR, "prompts")
SCRIPT_DIR = os.path.join(BASE_DIR, "scripts")
LOG_DIR = os.path.join(BASE_DIR, "logs")

# Initialize LLaMA with full system visibility
llama = LLaMAOrchestrator(
    prompt_dir=PROMPT_DIR,
    base_dir=BASE_DIR,
    script_dir=SCRIPT_DIR,
    log_dir=LOG_DIR,
    system_access=True,              # <-- grants it OS-level file control
    recursive_map=True,              # <-- allows deep traversal and awareness
    allow_mutation=True,             # <-- allows file generation or transformation
    runtime_memory=True              # <-- logs and recalls what it sees/does
)

# Begin full scan, execution, and system claim
llama.build_full_directory_map()     # map everything in Ascend-AI/
llama.load_prompt_instructions()     # parse prompt directives
llama.identify_static_scripts()      # locate all .py/.sh/.yaml relevant scripts
llama.route_to_coders()              # hand off to GPT-Engineer, etc.
llama.execute_orchestrations()       # build + run the full system
llama.log_system_state()             # store snapshot of system layout + status