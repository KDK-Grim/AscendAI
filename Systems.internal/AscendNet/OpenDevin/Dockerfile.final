FROM nikolaik/python-nodejs:python3.12-nodejs22

ENV POETRY_VIRTUALENVS_PATH=/openhands/poetry \
    MAMBA_ROOT_PREFIX=/openhands/micromamba \
    LANG=C.UTF-8 \
    LC_ALL=C.UTF-8 \
    EDITOR=code \
    VISUAL=code \
    GIT_EDITOR="code --wait" \
    OPENVSCODE_SERVER_ROOT=/openhands/.openvscode-server

# Install core system dependencies
RUN apt-get update && \
    apt-get install -y --no-install-recommends \
        wget curl ca-certificates sudo apt-utils git jq tmux build-essential ripgrep \
        libgl1 libasound2-plugins libatomic1 && \
    curl -fsSL https://deb.nodesource.com/setup_22.x | bash - && \
    TZ=Etc/UTC DEBIAN_FRONTEND=noninteractive \
    apt-get install -y --no-install-recommends nodejs python-is-python3 python3-pip && \
    npm install -g corepack && corepack enable yarn && \
    apt-get clean && rm -rf /var/lib/apt/lists/*

# Recreate corepack symlink and install Poetry + uv
RUN rm -f /usr/local/bin/corepack && \
    ln -s "$(dirname $(which node))/corepack" /usr/local/bin/corepack && \
    npm install -g corepack && corepack enable yarn && \
    curl -fsSL --compressed https://install.python-poetry.org | python - && \
    curl -LsSf https://astral.sh/uv/install.sh | sh

# Remove default user conflicts
RUN (getent passwd 1000 | grep -q pn && userdel pn) || true && \
    (getent passwd 1000 | grep -q ubuntu && userdel ubuntu) || true

# Directory layout setup
RUN mkdir -p /openhands/logs /openhands/poetry /openhands/micromamba/bin /openhands/workspace && \
    chmod -R g+rws,o+rw /openhands/workspace

# Install micromamba (standalone)
RUN /bin/bash -c "PREFIX_LOCATION=/openhands/micromamba BIN_FOLDER=/openhands/micromamba/bin INIT_YES=no CONDA_FORGE_YES=yes $(curl -L https://micro.mamba.pm/install.sh)" && \
    /openhands/micromamba/bin/micromamba config remove channels defaults && \
    /openhands/micromamba/bin/micromamba config list

# Create environment and install base
RUN /openhands/micromamba/bin/micromamba create -n openhands -y && \
    /openhands/micromamba/bin/micromamba install -n openhands -c conda-forge poetry python=3.12 -y

# WORKDIR = /openhands (real project root)
WORKDIR /openhands

# Copy dependency files and source
COPY pyproject.toml poetry.lock* ./
COPY openhands ./openhands
COPY openhands/entrypoint.sh /openhands/entrypoint.sh
RUN chmod +x /openhands/entrypoint.sh

# Setup poetry to write virtualenvs outside source tree
RUN /openhands/micromamba/bin/micromamba config set changeps1 False && \
    /openhands/micromamba/bin/micromamba run -n openhands poetry config virtualenvs.path /openhands/poetry

# Install dependencies from lock file
RUN /openhands/micromamba/bin/micromamba run -n openhands poetry install --no-interaction --no-root

# Playwright setup
RUN /openhands/micromamba/bin/micromamba run -n openhands poetry run pip install playwright && \
    /openhands/micromamba/bin/micromamba run -n openhands poetry run playwright install --with-deps chromium

# Store path to Python in /etc/environment
RUN /openhands/micromamba/bin/micromamba run -n openhands poetry run python -c "import sys; print('OH_INTERPRETER_PATH=' + sys.executable)" >> /etc/environment && \
    chmod -R g+rws /openhands/poetry

# Cleanup
RUN /openhands/micromamba/bin/micromamba run -n openhands poetry cache clear --all . -n && \
    apt-get clean && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/* && \
    /openhands/micromamba/bin/micromamba clean --all -y

# Launch script
ENTRYPOINT ["/openhands/entrypoint.sh"]
